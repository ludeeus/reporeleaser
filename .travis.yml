language: python
stages:
  - linting
  - install
  - deploy

jobs:
  include:
    #Linting
    - stage: linting
      install: pip install pycodestyle
      name: "Linting with pycodestyle"
      python: "3.6"
      script: find . -name \*.py -exec pycodestyle {} +
    - stage: linting
      install: pip install pydocstyle
      name: "Linting with pydocstyle"
      python: "3.6"
      script: find . -name \*.py -exec pydocstyle {} +
    - stage: linting
      install: pip install pylint
      name: "Linting with pylint"
      python: "3.6"
      script: find . -name \*.py -exec pylint --disable=R0903,R1705,R0801,F0401,W0613,R0205,R0902,R0913,R0914,R1703,R1702,R0912,R0201,R0915,W0703 {} +
    - stage: linting
      install: pip install pyflakes
      name: "Linting with pyflakes"
      python: "3.6"
      script: find . -name \*.py -exec pyflakes {} +
    - stage: linting
      install: pip install flake8
      name: "Linting with flake8"
      python: "3.6"
      script: find . -name \*.py -exec flake8 {} +

    # Test install the module
    - stage: install
      install: pip install -U pip setuptools wheel
      name: "Setup test"
      python: "3.6"
      script:
        - python setup.py install
        - python -c"from reporeleaser.release import CreateRelease"

    # Deploy to PyPi if all tests pass and change was done on master.
    - stage: deploy
      name: "Deploy to PyPi"
      install: pip install -U pip setuptools wheel
      script: skip
      deploy: &pypi
        skip_existing: true
        provider: pypi
        user: "$PYPIUSER"
        password: "$PYPIKEY"
        on:
          tags: true